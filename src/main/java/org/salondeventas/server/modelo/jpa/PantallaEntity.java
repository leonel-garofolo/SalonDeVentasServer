/*
 * Created on 31 oct 2016 ( Time 11:50:33 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.salondeventas.server.modelo.jpa;

import java.io.Serializable;

import javax.validation.constraints.*;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "pantalla"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="pantalla", catalog="salon_de_ventas" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PantallaEntity.countAll", query="SELECT COUNT(x) FROM PantallaEntity x" )
} )
public class PantallaEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="idpantalla", nullable=false)
    private Integer    idpantalla   ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
	@NotNull
	@Size(max = 255)
    @Column(name="Nombre", nullable=false, length=255)
    private String     nombre       ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToMany(targetEntity=PermisoEntity.class)
    @JoinTable(name="pantallapermisos", 
      joinColumns=@JoinColumn(name="idPantalla", referencedColumnName="idpantalla"),
      inverseJoinColumns=@JoinColumn(name="idPermiso", referencedColumnName="idpermiso")
     ) 

    private List<PermisoEntity> listOfPermiso;

    @ManyToMany(targetEntity=PerfilesEntity.class)
    @JoinTable(name="perfilespantallas", 
      joinColumns=@JoinColumn(name="idPantallas", referencedColumnName="idpantalla"),
      inverseJoinColumns=@JoinColumn(name="idPerfiles", referencedColumnName="idperfiles")
     ) 

    private List<PerfilesEntity> listOfPerfiles;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PantallaEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setIdpantalla( Integer idpantalla ) {
        this.idpantalla = idpantalla ;
    }
    public Integer getIdpantalla() {
        return this.idpantalla;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : Nombre ( VARCHAR ) 
    public void setNombre( String nombre ) {
        this.nombre = nombre;
    }
    public String getNombre() {
        return this.nombre;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfPermiso( List<PermisoEntity> listOfPermiso ) {
        this.listOfPermiso = listOfPermiso;
    }
    public List<PermisoEntity> getListOfPermiso() {
        return this.listOfPermiso;
    }

    public void setListOfPerfiles( List<PerfilesEntity> listOfPerfiles ) {
        this.listOfPerfiles = listOfPerfiles;
    }
    public List<PerfilesEntity> getListOfPerfiles() {
        return this.listOfPerfiles;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(idpantalla);
        sb.append("]:"); 
        sb.append(nombre);
        return sb.toString(); 
    } 

}
