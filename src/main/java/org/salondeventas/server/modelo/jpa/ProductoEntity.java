/*
 * Created on 23 sep 2016 ( Time 15:23:25 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.salondeventas.server.modelo.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Persistent class for entity stored in table "producto"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="producto", catalog="salon_de_ventas" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ProductoEntity.countAll", query="SELECT COUNT(x) FROM ProductoEntity x" )
} )
public class ProductoEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="idProducto", nullable=false)
	private Integer    idproducto   ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="nombre", length=90)
	 private String     nombre       ;

    @Column(name="detalle", length=255)
	 private String     detalle      ;

	// "precioproductoIdprecioproducto" (column "precioproducto_idprecioproducto") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="producto", targetEntity=LineadeventaEntity.class)
    private List<LineadeventaEntity> listOfLineadeventa;

    @ManyToOne
    @JoinColumn(name="precioproducto_idprecioproducto", referencedColumnName="idprecioproducto")
    private PrecioproductoEntity precioproducto;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ProductoEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setIdproducto( Integer idproducto ) {
        this.idproducto = idproducto ;
    }
    public Integer getIdproducto() {
        return this.idproducto;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : nombre ( VARCHAR ) 
    public void setNombre( String nombre ) {
        this.nombre = nombre;
    }
    public String getNombre() {
        return this.nombre;
    }

    //--- DATABASE MAPPING : detalle ( VARCHAR ) 
    public void setDetalle( String detalle ) {
        this.detalle = detalle;
    }
    public String getDetalle() {
        return this.detalle;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfLineadeventa( List<LineadeventaEntity> listOfLineadeventa ) {
        this.listOfLineadeventa = listOfLineadeventa;
    }
    public List<LineadeventaEntity> getListOfLineadeventa() {
        return this.listOfLineadeventa;
    }

    public void setPrecioproducto( PrecioproductoEntity precioproducto ) {
        this.precioproducto = precioproducto;
    }
    public PrecioproductoEntity getPrecioproducto() {
        return this.precioproducto;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(idproducto);
        sb.append("]:"); 
        sb.append(nombre);
        sb.append("|");
        sb.append(detalle);
        return sb.toString(); 
    } 

}
